<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Tue Sep 30 09:17:29 2025
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UART_Init &rArr; UART_BaudRateConfig &rArr; GetClockFreq &rArr; assert_failed &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC0_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC0_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[11]">ALU_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[12]">CMP0_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[b]">CMP1_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[8]">DMA_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[9]">EXTIA_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[a]">EXTIB_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[14]">I2C0_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[7]">IFMC_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[6]">PVD_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[15]">SPI0_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[18]">SystemInit</a> from system_ptm280x.o(.text.SystemInit) referenced from startup_ptm280x.o(.text)
 <LI><a href="#[d]">TIM1_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[10]">TIM2_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[f]">TIM3_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[e]">TIM4_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[13]">TIM8_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[16]">UART0_Handler</a> from startup_ptm280x.o(.text) referenced from startup_ptm280x.o(RESET)
 <LI><a href="#[19]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ptm280x.o(.text)
 <LI><a href="#[1a]">fputc</a> from pt32x0xx_retarget.o(.text.fputc) referenced from printf4.o(i.__0printf$4)
 <LI><a href="#[17]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[19]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[20]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[3d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[3e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ALU_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>CMP0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>CMP1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXTIA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTIB_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>IFMC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PVD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIM1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIM2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIM4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ptm280x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateConfig
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1c]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[42]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[43]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>GPIO_DigitalRemapConfig</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, pt32x0xx_gpio.o(.text.GPIO_DigitalRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_DigitalRemapConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>GPIO_Init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, pt32x0xx_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>GetClockFreq</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, system_ptm280x.o(.text.GetClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetClockFreq &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateConfig
</UL>

<P><STRONG><a name="[26]"></a>I2C_Cmd</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
</UL>

<P><STRONG><a name="[27]"></a>I2C_EE_Write</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, main.o(.text.I2C_EE_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_EE_Write &rArr; I2C_SendData &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendAddress
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>I2C_GenerateEvent</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_GenerateEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_GenerateEvent &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
</UL>

<P><STRONG><a name="[29]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
</UL>

<P><STRONG><a name="[2c]"></a>I2C_Init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>I2C_SendAddress</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_SendAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_SendAddress &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
</UL>

<P><STRONG><a name="[2b]"></a>I2C_SendData</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, pt32x0xx_i2c.o(.text.I2C_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_SendData &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
</UL>

<P><STRONG><a name="[2d]"></a>IFMC_SetLatency</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pt32x0xx_ifmc.o(.text.IFMC_SetLatency))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IFMC_SetLatency &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2e]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pt32x0xx_rcc.o(.text.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_AHBPeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>RCC_APBPeriph2ClockCmd</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pt32x0xx_rcc.o(.text.RCC_APBPeriph2ClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_APBPeriph2ClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>RCC_HCLKSetPrescaler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pt32x0xx_rcc.o(.text.RCC_HCLKSetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_HCLKSetPrescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[31]"></a>RCC_PCLKSetPrescaler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pt32x0xx_rcc.o(.text.RCC_PCLKSetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_PCLKSetPrescaler &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[32]"></a>RCC_SetMCOSource</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, pt32x0xx_rcc.o(.text.RCC_SetMCOSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_SetMCOSource &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[18]"></a>SystemInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system_ptm280x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit &rArr; IFMC_SetLatency &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IFMC_SetLatency
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetMCOSource
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLKSetPrescaler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKSetPrescaler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ptm280x.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>UART_BaudRateConfig</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, pt32x0xx_uart.o(.text.UART_BaudRateConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_BaudRateConfig &rArr; GetClockFreq &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[34]"></a>UART_Cmd</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, pt32x0xx_uart.o(.text.UART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>UART_Init</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, pt32x0xx_uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART_Init &rArr; UART_BaudRateConfig &rArr; GetClockFreq &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22]"></a>assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APBPeriph2ClockCmd
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendAddress
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateEvent
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DigitalRemapConfig
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IFMC_SetLatency
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetMCOSource
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLKSetPrescaler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKSetPrescaler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateConfig
</UL>

<P><STRONG><a name="[1a]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pt32x0xx_retarget.o(.text.fputc))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf4.o(i.__0printf$4)
</UL>
<P><STRONG><a name="[17]"></a>main</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; UART_Init &rArr; UART_BaudRateConfig &rArr; GetClockFreq &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APBPeriph2ClockCmd
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EE_Write
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DigitalRemapConfig
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[38]"></a>__0printf$4</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf4.o(i.__0printf$4), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[44]"></a>__1printf$4</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf4.o(i.__0printf$4), UNUSED)

<P><STRONG><a name="[36]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf4.o(i.__0printf$4))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[46]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[47]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[37]"></a>puts</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = puts
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[39]"></a>_printf_core</STRONG> (Thumb, 560 bytes, Stack size 96 bytes, printf4.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$4
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
